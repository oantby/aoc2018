import sys
import string

letters = dict(zip(string.ascii_uppercase, range(1,27)))

reqs = {}
if 'R' not in reqs: reqs['R'] = set()
if 'F' not in reqs: reqs['F'] = set()
reqs['R'].add('F')
if 'P' not in reqs: reqs['P'] = set()
if 'I' not in reqs: reqs['I'] = set()
reqs['P'].add('I')
if 'O' not in reqs: reqs['O'] = set()
if 'C' not in reqs: reqs['C'] = set()
reqs['O'].add('C')
if 'K' not in reqs: reqs['K'] = set()
if 'H' not in reqs: reqs['H'] = set()
reqs['K'].add('H')
if 'N' not in reqs: reqs['N'] = set()
if 'Y' not in reqs: reqs['Y'] = set()
reqs['N'].add('Y')
if 'J' not in reqs: reqs['J'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['J'].add('M')
if 'W' not in reqs: reqs['W'] = set()
if 'D' not in reqs: reqs['D'] = set()
reqs['W'].add('D')
if 'N' not in reqs: reqs['N'] = set()
if 'B' not in reqs: reqs['B'] = set()
reqs['N'].add('B')
if 'A' not in reqs: reqs['A'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['A'].add('T')
if 'L' not in reqs: reqs['L'] = set()
if 'R' not in reqs: reqs['R'] = set()
reqs['L'].add('R')
if 'S' not in reqs: reqs['S'] = set()
if 'P' not in reqs: reqs['P'] = set()
reqs['S'].add('P')
if 'J' not in reqs: reqs['J'] = set()
if 'O' not in reqs: reqs['O'] = set()
reqs['J'].add('O')
if 'N' not in reqs: reqs['N'] = set()
if 'X' not in reqs: reqs['X'] = set()
reqs['N'].add('X')
if 'K' not in reqs: reqs['K'] = set()
if 'A' not in reqs: reqs['A'] = set()
reqs['K'].add('A')
if 'G' not in reqs: reqs['G'] = set()
if 'N' not in reqs: reqs['N'] = set()
reqs['G'].add('N')
if 'U' not in reqs: reqs['U'] = set()
if 'W' not in reqs: reqs['W'] = set()
reqs['U'].add('W')
if 'U' not in reqs: reqs['U'] = set()
if 'Q' not in reqs: reqs['Q'] = set()
reqs['U'].add('Q')
if 'U' not in reqs: reqs['U'] = set()
if 'V' not in reqs: reqs['V'] = set()
reqs['U'].add('V')
if 'G' not in reqs: reqs['G'] = set()
if 'J' not in reqs: reqs['J'] = set()
reqs['G'].add('J')
if 'S' not in reqs: reqs['S'] = set()
if 'G' not in reqs: reqs['G'] = set()
reqs['S'].add('G')
if 'U' not in reqs: reqs['U'] = set()
if 'Z' not in reqs: reqs['Z'] = set()
reqs['U'].add('Z')
if 'S' not in reqs: reqs['S'] = set()
if 'U' not in reqs: reqs['U'] = set()
reqs['S'].add('U')
if 'L' not in reqs: reqs['L'] = set()
if 'E' not in reqs: reqs['E'] = set()
reqs['L'].add('E')
if 'L' not in reqs: reqs['L'] = set()
if 'K' not in reqs: reqs['K'] = set()
reqs['L'].add('K')
if 'S' not in reqs: reqs['S'] = set()
if 'L' not in reqs: reqs['L'] = set()
reqs['S'].add('L')
if 'N' not in reqs: reqs['N'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['N'].add('M')
if 'E' not in reqs: reqs['E'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['E'].add('T')
if 'U' not in reqs: reqs['U'] = set()
if 'J' not in reqs: reqs['J'] = set()
reqs['U'].add('J')
if 'L' not in reqs: reqs['L'] = set()
if 'G' not in reqs: reqs['G'] = set()
reqs['L'].add('G')
if 'P' not in reqs: reqs['P'] = set()
if 'D' not in reqs: reqs['D'] = set()
reqs['P'].add('D')
if 'Z' not in reqs: reqs['Z'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['Z'].add('T')
if 'L' not in reqs: reqs['L'] = set()
if 'U' not in reqs: reqs['U'] = set()
reqs['L'].add('U')
if 'K' not in reqs: reqs['K'] = set()
if 'Z' not in reqs: reqs['Z'] = set()
reqs['K'].add('Z')
if 'V' not in reqs: reqs['V'] = set()
if 'Q' not in reqs: reqs['Q'] = set()
reqs['V'].add('Q')
if 'K' not in reqs: reqs['K'] = set()
if 'G' not in reqs: reqs['G'] = set()
reqs['K'].add('G')
if 'E' not in reqs: reqs['E'] = set()
if 'Z' not in reqs: reqs['Z'] = set()
reqs['E'].add('Z')
if 'Z' not in reqs: reqs['Z'] = set()
if 'Q' not in reqs: reqs['Q'] = set()
reqs['Z'].add('Q')
if 'S' not in reqs: reqs['S'] = set()
if 'J' not in reqs: reqs['J'] = set()
reqs['S'].add('J')
if 'U' not in reqs: reqs['U'] = set()
if 'G' not in reqs: reqs['G'] = set()
reqs['U'].add('G')
if 'M' not in reqs: reqs['M'] = set()
if 'I' not in reqs: reqs['I'] = set()
reqs['M'].add('I')
if 'K' not in reqs: reqs['K'] = set()
if 'W' not in reqs: reqs['W'] = set()
reqs['K'].add('W')
if 'V' not in reqs: reqs['V'] = set()
if 'Y' not in reqs: reqs['Y'] = set()
reqs['V'].add('Y')
if 'Q' not in reqs: reqs['Q'] = set()
if 'B' not in reqs: reqs['B'] = set()
reqs['Q'].add('B')
if 'D' not in reqs: reqs['D'] = set()
if 'Y' not in reqs: reqs['Y'] = set()
reqs['D'].add('Y')
if 'G' not in reqs: reqs['G'] = set()
if 'I' not in reqs: reqs['I'] = set()
reqs['G'].add('I')
if 'S' not in reqs: reqs['S'] = set()
if 'A' not in reqs: reqs['A'] = set()
reqs['S'].add('A')
if 'S' not in reqs: reqs['S'] = set()
if 'X' not in reqs: reqs['X'] = set()
reqs['S'].add('X')
if 'N' not in reqs: reqs['N'] = set()
if 'O' not in reqs: reqs['O'] = set()
reqs['N'].add('O')
if 'X' not in reqs: reqs['X'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['X'].add('M')
if 'Z' not in reqs: reqs['Z'] = set()
if 'V' not in reqs: reqs['V'] = set()
reqs['Z'].add('V')
if 'Z' not in reqs: reqs['Z'] = set()
if 'W' not in reqs: reqs['W'] = set()
reqs['Z'].add('W')
if 'L' not in reqs: reqs['L'] = set()
if 'C' not in reqs: reqs['C'] = set()
reqs['L'].add('C')
if 'G' not in reqs: reqs['G'] = set()
if 'Q' not in reqs: reqs['Q'] = set()
reqs['G'].add('Q')
if 'U' not in reqs: reqs['U'] = set()
if 'A' not in reqs: reqs['A'] = set()
reqs['U'].add('A')
if 'Z' not in reqs: reqs['Z'] = set()
if 'G' not in reqs: reqs['G'] = set()
reqs['Z'].add('G')
if 'Q' not in reqs: reqs['Q'] = set()
if 'P' not in reqs: reqs['P'] = set()
reqs['Q'].add('P')
if 'Z' not in reqs: reqs['Z'] = set()
if 'C' not in reqs: reqs['C'] = set()
reqs['Z'].add('C')
if 'K' not in reqs: reqs['K'] = set()
if 'U' not in reqs: reqs['U'] = set()
reqs['K'].add('U')
if 'L' not in reqs: reqs['L'] = set()
if 'Q' not in reqs: reqs['Q'] = set()
reqs['L'].add('Q')
if 'U' not in reqs: reqs['U'] = set()
if 'X' not in reqs: reqs['X'] = set()
reqs['U'].add('X')
if 'N' not in reqs: reqs['N'] = set()
if 'A' not in reqs: reqs['A'] = set()
reqs['N'].add('A')
if 'S' not in reqs: reqs['S'] = set()
if 'N' not in reqs: reqs['N'] = set()
reqs['S'].add('N')
if 'L' not in reqs: reqs['L'] = set()
if 'Z' not in reqs: reqs['Z'] = set()
reqs['L'].add('Z')
if 'D' not in reqs: reqs['D'] = set()
if 'F' not in reqs: reqs['F'] = set()
reqs['D'].add('F')
if 'A' not in reqs: reqs['A'] = set()
if 'D' not in reqs: reqs['D'] = set()
reqs['A'].add('D')
if 'K' not in reqs: reqs['K'] = set()
if 'J' not in reqs: reqs['J'] = set()
reqs['K'].add('J')
if 'Q' not in reqs: reqs['Q'] = set()
if 'W' not in reqs: reqs['W'] = set()
reqs['Q'].add('W')
if 'J' not in reqs: reqs['J'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['J'].add('T')
if 'W' not in reqs: reqs['W'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['W'].add('T')
if 'K' not in reqs: reqs['K'] = set()
if 'E' not in reqs: reqs['E'] = set()
reqs['K'].add('E')
if 'U' not in reqs: reqs['U'] = set()
if 'P' not in reqs: reqs['P'] = set()
reqs['U'].add('P')
if 'Z' not in reqs: reqs['Z'] = set()
if 'O' not in reqs: reqs['O'] = set()
reqs['Z'].add('O')
if 'B' not in reqs: reqs['B'] = set()
if 'D' not in reqs: reqs['D'] = set()
reqs['B'].add('D')
if 'J' not in reqs: reqs['J'] = set()
if 'R' not in reqs: reqs['R'] = set()
reqs['J'].add('R')
if 'A' not in reqs: reqs['A'] = set()
if 'O' not in reqs: reqs['O'] = set()
reqs['A'].add('O')
if 'E' not in reqs: reqs['E'] = set()
if 'N' not in reqs: reqs['N'] = set()
reqs['E'].add('N')
if 'G' not in reqs: reqs['G'] = set()
if 'D' not in reqs: reqs['D'] = set()
reqs['G'].add('D')
if 'Q' not in reqs: reqs['Q'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['Q'].add('M')
if 'W' not in reqs: reqs['W'] = set()
if 'F' not in reqs: reqs['F'] = set()
reqs['W'].add('F')
if 'L' not in reqs: reqs['L'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['L'].add('T')
if 'E' not in reqs: reqs['E'] = set()
if 'U' not in reqs: reqs['U'] = set()
reqs['E'].add('U')
if 'L' not in reqs: reqs['L'] = set()
if 'X' not in reqs: reqs['X'] = set()
reqs['L'].add('X')
if 'G' not in reqs: reqs['G'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['G'].add('M')
if 'S' not in reqs: reqs['S'] = set()
if 'Z' not in reqs: reqs['Z'] = set()
reqs['S'].add('Z')
if 'Y' not in reqs: reqs['Y'] = set()
if 'F' not in reqs: reqs['F'] = set()
reqs['Y'].add('F')
if 'Z' not in reqs: reqs['Z'] = set()
if 'N' not in reqs: reqs['N'] = set()
reqs['Z'].add('N')
if 'U' not in reqs: reqs['U'] = set()
if 'T' not in reqs: reqs['T'] = set()
reqs['U'].add('T')
if 'O' not in reqs: reqs['O'] = set()
if 'D' not in reqs: reqs['D'] = set()
reqs['O'].add('D')
if 'X' not in reqs: reqs['X'] = set()
if 'H' not in reqs: reqs['H'] = set()
reqs['X'].add('H')
if 'E' not in reqs: reqs['E'] = set()
if 'V' not in reqs: reqs['V'] = set()
reqs['E'].add('V')
if 'T' not in reqs: reqs['T'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['T'].add('M')
if 'O' not in reqs: reqs['O'] = set()
if 'Y' not in reqs: reqs['Y'] = set()
reqs['O'].add('Y')
if 'E' not in reqs: reqs['E'] = set()
if 'P' not in reqs: reqs['P'] = set()
reqs['E'].add('P')
if 'E' not in reqs: reqs['E'] = set()
if 'C' not in reqs: reqs['C'] = set()
reqs['E'].add('C')
if 'L' not in reqs: reqs['L'] = set()
if 'P' not in reqs: reqs['P'] = set()
reqs['L'].add('P')
if 'A' not in reqs: reqs['A'] = set()
if 'M' not in reqs: reqs['M'] = set()
reqs['A'].add('M')
if 'T' not in reqs: reqs['T'] = set()
if 'F' not in reqs: reqs['F'] = set()
reqs['T'].add('F')
if 'C' not in reqs: reqs['C'] = set()
if 'I' not in reqs: reqs['I'] = set()
reqs['C'].add('I')
if 'Z' not in reqs: reqs['Z'] = set()
if 'X' not in reqs: reqs['X'] = set()
reqs['Z'].add('X')
if 'U' not in reqs: reqs['U'] = set()
if 'Y' not in reqs: reqs['Y'] = set()
reqs['U'].add('Y')
if 'E' not in reqs: reqs['E'] = set()
if 'B' not in reqs: reqs['B'] = set()
reqs['E'].add('B')

workers = {0: None, 1: None, 2: None, 3: None, 4: None}
t = 0
while len(reqs) or len([x for x in workers if workers[x] is not None]):
	able = sorted([x for x in reqs if len(reqs[x]) == 0])
	for x in range(min(len([x for x in workers if workers[x] is None]), len(able))):
		for i in workers:
			if workers[i] is None:
				workers[i] = [able[x], 60 + letters[able[x]]]
				del(reqs[able[x]])
				break
	
	for x in workers:
		if workers[x] is not None:
			workers[x][1] -= 1
			if workers[x][1] == 0:
				for i in reqs:
					if workers[x][0] in reqs[i]:
						reqs[i].remove(workers[x][0])
				print(workers[x][0] + " done")
				workers[x] = None
	t += 1
	print(t)
print("%d seconds" % t)